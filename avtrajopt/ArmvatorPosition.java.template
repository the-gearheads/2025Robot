package frc.robot.util;

import edu.wpi.first.math.geometry.Translation2d;

// This class is autogenerated from avtrajopt/generateungeneratedtrajs.py. Do not edit.
public enum ArmvatorPosition {
{{ENDEFF_POSITIONS}}
  public final Translation2d endeffPos;

  private ArmvatorPosition(Translation2d endeffPos) {
    this.endeffPos = endeffPos;
  }

  public static ArmvatorPosition getNearest(Translation2d endeffPos) {
    ArmvatorPosition best = null;
    double bestDist = Double.POSITIVE_INFINITY;
    for (ArmvatorPosition pos : ArmvatorPosition.values()) {
      double dist = pos.endeffPos.getDistance(endeffPos);
      if (dist < bestDist) {
        best = pos;
        bestDist = dist;
      }
    }
    return best;
  }

  public static ArmvatorPosition getNearestStateSpace (Translation2d endeffPos) {
    var currentElev = endeffPos.getNorm();
    var currentPivot = Math.atan2(endeffPos.getY(), endeffPos.getX());
    Translation2d elevPivotStateSpace = new Translation2d(currentElev, currentPivot);

    ArmvatorPosition best = null;
    double bestDist = Double.POSITIVE_INFINITY;
    for (ArmvatorPosition pos : ArmvatorPosition.values()) {
      var elevatorLength = pos.endeffPos.getNorm();
      var pivotAngle = Math.atan2(pos.endeffPos.getY(), pos.endeffPos.getX());
      Translation2d elevPivotStateSpacePos = new Translation2d(elevatorLength, pivotAngle);
      double dist = elevPivotStateSpace.getDistance(elevPivotStateSpacePos);
      if (dist < bestDist) {
        best = pos;
        bestDist = dist;
      }
    }
    return best;
  }
}
